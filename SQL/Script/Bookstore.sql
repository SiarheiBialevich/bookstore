-- MySQL Script generated by MySQL Workbench
-- 08/01/17 00:37:32
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema bookstore
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema bookstore
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `bookstore` DEFAULT CHARACTER SET utf8 ;
USE `bookstore` ;

-- -----------------------------------------------------
-- Table `bookstore`.`genres`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bookstore`.`genres` (
  `id` INT NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bookstore`.`books`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bookstore`.`books` (
  `id` INT NOT NULL,
  `title` VARCHAR(255) NOT NULL,
  `genres_id` INT NOT NULL,
  PRIMARY KEY (`id`, `genres_id`),
  INDEX `fk_books_genres1_idx` (`genres_id` ASC),
  UNIQUE INDEX `name_UNIQUE` (`title` ASC),
  CONSTRAINT `fk_books_genres1`
    FOREIGN KEY (`genres_id`)
    REFERENCES `bookstore`.`genres` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bookstore`.`authors`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bookstore`.`authors` (
  `id` INT NOT NULL,
  `name` VARCHAR(50) NOT NULL,
  `lastname` VARCHAR(50) NOT NULL,
  `d_birth` INT NOT NULL,
  `biography` MEDIUMTEXT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `lastname_UNIQUE` (`lastname` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bookstore`.`roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bookstore`.`roles` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(50) NOT NULL,
  `lastname` VARCHAR(50) NOT NULL,
  `title` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bookstore`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bookstore`.`users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(50) NOT NULL,
  `lastname` VARCHAR(50) NOT NULL,
  `login` VARCHAR(255) NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  `address` VARCHAR(255) NULL,
  `roles_id` INT NOT NULL,
  PRIMARY KEY (`id`, `roles_id`),
  INDEX `fk_users_roles1_idx` (`roles_id` ASC),
  CONSTRAINT `fk_users_roles1`
    FOREIGN KEY (`roles_id`)
    REFERENCES `bookstore`.`roles` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bookstore`.`citys`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bookstore`.`citys` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bookstore`.`locations`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bookstore`.`locations` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(50) NOT NULL,
  `count` INT NOT NULL,
  `citys_id` INT NOT NULL,
  PRIMARY KEY (`id`, `citys_id`),
  INDEX `fk_locations_citys1_idx` (`citys_id` ASC),
  CONSTRAINT `fk_locations_citys1`
    FOREIGN KEY (`citys_id`)
    REFERENCES `bookstore`.`citys` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bookstore`.`diliverys`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bookstore`.`diliverys` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `shipping_method` VARCHAR(255) NOT NULL,
  `books_id` INT NOT NULL,
  PRIMARY KEY (`id`, `books_id`),
  INDEX `fk_diliverys_books1_idx` (`books_id` ASC),
  CONSTRAINT `fk_diliverys_books1`
    FOREIGN KEY (`books_id`)
    REFERENCES `bookstore`.`books` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bookstore`.`orderings`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bookstore`.`orderings` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `date` DATE NOT NULL,
  `users_id` INT NOT NULL,
  PRIMARY KEY (`id`, `users_id`),
  INDEX `fk_orderings_users1_idx` (`users_id` ASC),
  CONSTRAINT `fk_orderings_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `bookstore`.`users` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bookstore`.`books_authors`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bookstore`.`books_authors` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `authors_id` INT NOT NULL,
  `books_id` INT NOT NULL,
  PRIMARY KEY (`id`, `authors_id`, `books_id`),
  INDEX `fk_books_authors_books1_idx` (`books_id` ASC),
  INDEX `fk_books_authors_authors1_idx` (`authors_id` ASC),
  CONSTRAINT `fk_authors_has_books_authors1`
    FOREIGN KEY (`authors_id`)
    REFERENCES `bookstore`.`authors` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_authors_has_books_books1`
    FOREIGN KEY (`books_id`)
    REFERENCES `bookstore`.`books` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bookstore`.`books_locations`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bookstore`.`books_locations` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `books_id` INT NOT NULL,
  `locations_id` INT NOT NULL,
  `persence` TINYINT(1) NOT NULL,
  PRIMARY KEY (`id`, `books_id`, `locations_id`),
  INDEX `fk_books_locations_locations1_idx` (`locations_id` ASC),
  INDEX `fk_books_locations_books1_idx` (`books_id` ASC),
  CONSTRAINT `fk_books_has_locations_books1`
    FOREIGN KEY (`books_id`)
    REFERENCES `bookstore`.`books` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_books_has_locations_locations1`
    FOREIGN KEY (`locations_id`)
    REFERENCES `bookstore`.`locations` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bookstore`.`books_orderings`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bookstore`.`books_orderings` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `orderings_id` INT NOT NULL,
  `books_id` INT NOT NULL,
  PRIMARY KEY (`id`, `orderings_id`, `books_id`),
  INDEX `fk_orderings_has_books_books1_idx` (`books_id` ASC),
  INDEX `fk_orderings_has_books_orderings1_idx` (`orderings_id` ASC),
  CONSTRAINT `fk_orderings_has_books_orderings1`
    FOREIGN KEY (`orderings_id`)
    REFERENCES `bookstore`.`orderings` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_orderings_has_books_books1`
    FOREIGN KEY (`books_id`)
    REFERENCES `bookstore`.`books` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `bookstore`.`citys`
-- -----------------------------------------------------
START TRANSACTION;
USE `bookstore`;
INSERT INTO `bookstore`.`citys` (`id`, `name`) VALUES (DEFAULT, 'Brest');
INSERT INTO `bookstore`.`citys` (`id`, `name`) VALUES (DEFAULT, 'Gomel');
INSERT INTO `bookstore`.`citys` (`id`, `name`) VALUES (DEFAULT, 'Grodno');
INSERT INTO `bookstore`.`citys` (`id`, `name`) VALUES (DEFAULT, 'Mahilyow');
INSERT INTO `bookstore`.`citys` (`id`, `name`) VALUES (DEFAULT, 'Minsk');
INSERT INTO `bookstore`.`citys` (`id`, `name`) VALUES (DEFAULT, 'Vitebsk');

COMMIT;

