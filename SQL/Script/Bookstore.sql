-- MySQL Script generated by MySQL Workbench
-- 08/13/17 22:15:16
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema bookstore
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `bookstore` ;

-- -----------------------------------------------------
-- Schema bookstore
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `bookstore` DEFAULT CHARACTER SET utf8 ;
USE `bookstore` ;

-- -----------------------------------------------------
-- Table `bookstore`.`genres`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bookstore`.`genres` (
  `id` INT NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bookstore`.`books`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bookstore`.`books` (
  `id` INT NOT NULL,
  `title` VARCHAR(255) NOT NULL,
  `genres_id` INT NOT NULL,
  PRIMARY KEY (`id`, `genres_id`),
  INDEX `fk_books_genres1_idx` (`genres_id` ASC),
  UNIQUE INDEX `name_UNIQUE` (`title` ASC),
  CONSTRAINT `fk_books_genres1`
    FOREIGN KEY (`genres_id`)
    REFERENCES `bookstore`.`genres` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bookstore`.`authors`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bookstore`.`authors` (
  `id` INT NOT NULL,
  `name` VARCHAR(50) NOT NULL,
  `lastname` VARCHAR(50) NOT NULL,
  `d_birth` VARCHAR(15) NOT NULL,
  `biography` MEDIUMTEXT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `lastname_UNIQUE` (`lastname` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bookstore`.`roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bookstore`.`roles` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bookstore`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bookstore`.`users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(50) NOT NULL,
  `lastname` VARCHAR(50) NOT NULL,
  `login` VARCHAR(255) NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  `address` VARCHAR(255) NULL,
  `roles_id` INT NOT NULL,
  PRIMARY KEY (`id`, `roles_id`),
  INDEX `fk_users_roles1_idx` (`roles_id` ASC),
  CONSTRAINT `fk_users_roles1`
    FOREIGN KEY (`roles_id`)
    REFERENCES `bookstore`.`roles` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bookstore`.`citys`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bookstore`.`citys` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bookstore`.`locations`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bookstore`.`locations` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(50) NOT NULL,
  `citys_id` INT NOT NULL,
  PRIMARY KEY (`id`, `citys_id`),
  INDEX `fk_locations_citys1_idx` (`citys_id` ASC),
  CONSTRAINT `fk_locations_citys1`
    FOREIGN KEY (`citys_id`)
    REFERENCES `bookstore`.`citys` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bookstore`.`diliverys`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bookstore`.`diliverys` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `shipping_method` VARCHAR(255) NOT NULL,
  `books_id` INT NOT NULL,
  PRIMARY KEY (`id`, `books_id`),
  INDEX `fk_diliverys_books1_idx` (`books_id` ASC),
  CONSTRAINT `fk_diliverys_books1`
    FOREIGN KEY (`books_id`)
    REFERENCES `bookstore`.`books` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bookstore`.`orderings`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bookstore`.`orderings` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `date` DATE NOT NULL,
  `users_id` INT NOT NULL,
  PRIMARY KEY (`id`, `users_id`),
  INDEX `fk_orderings_users1_idx` (`users_id` ASC),
  CONSTRAINT `fk_orderings_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `bookstore`.`users` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bookstore`.`books_authors`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bookstore`.`books_authors` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `authors_id` INT NOT NULL,
  `books_id` INT NOT NULL,
  PRIMARY KEY (`id`, `authors_id`, `books_id`),
  INDEX `fk_books_authors_books1_idx` (`books_id` ASC),
  INDEX `fk_books_authors_authors1_idx` (`authors_id` ASC),
  CONSTRAINT `fk_authors_has_books_authors1`
    FOREIGN KEY (`authors_id`)
    REFERENCES `bookstore`.`authors` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_authors_has_books_books1`
    FOREIGN KEY (`books_id`)
    REFERENCES `bookstore`.`books` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bookstore`.`books_locations`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bookstore`.`books_locations` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `books_id` INT NOT NULL,
  `locations_id` INT NOT NULL,
  `count` INT NULL,
  PRIMARY KEY (`id`, `books_id`, `locations_id`),
  INDEX `fk_books_locations_locations1_idx` (`locations_id` ASC),
  INDEX `fk_books_locations_books1_idx` (`books_id` ASC),
  CONSTRAINT `fk_books_has_locations_books1`
    FOREIGN KEY (`books_id`)
    REFERENCES `bookstore`.`books` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_books_has_locations_locations1`
    FOREIGN KEY (`locations_id`)
    REFERENCES `bookstore`.`locations` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bookstore`.`books_orderings`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bookstore`.`books_orderings` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `orderings_id` INT NOT NULL,
  `books_id` INT NOT NULL,
  PRIMARY KEY (`id`, `orderings_id`, `books_id`),
  INDEX `fk_orderings_has_books_books1_idx` (`books_id` ASC),
  INDEX `fk_orderings_has_books_orderings1_idx` (`orderings_id` ASC),
  CONSTRAINT `fk_orderings_has_books_orderings1`
    FOREIGN KEY (`orderings_id`)
    REFERENCES `bookstore`.`orderings` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_orderings_has_books_books1`
    FOREIGN KEY (`books_id`)
    REFERENCES `bookstore`.`books` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `bookstore`.`genres`
-- -----------------------------------------------------
START TRANSACTION;
USE `bookstore`;
INSERT INTO `bookstore`.`genres` (`id`, `name`) VALUES (1, 'horror');
INSERT INTO `bookstore`.`genres` (`id`, `name`) VALUES (2, 'fantasy');

COMMIT;


-- -----------------------------------------------------
-- Data for table `bookstore`.`books`
-- -----------------------------------------------------
START TRANSACTION;
USE `bookstore`;
INSERT INTO `bookstore`.`books` (`id`, `title`, `genres_id`) VALUES (1, 'Pet cemetery', 1);
INSERT INTO `bookstore`.`books` (`id`, `title`, `genres_id`) VALUES (2, 'No time for dragons', 2);

COMMIT;


-- -----------------------------------------------------
-- Data for table `bookstore`.`authors`
-- -----------------------------------------------------
START TRANSACTION;
USE `bookstore`;
INSERT INTO `bookstore`.`authors` (`id`, `name`, `lastname`, `d_birth`, `biography`) VALUES (1, 'Stephen', 'King', '21-09-1947', 'Stephen Edwin king is an American writer, working in various genres, including horror, Thriller, science fiction, fantasy, mysticism, drama; earned the nickname \"King of horror\".');
INSERT INTO `bookstore`.`authors` (`id`, `name`, `lastname`, `d_birth`, `biography`) VALUES (2, 'Nik', 'Perumov', '21-11-1963', 'Popular modern Russian writer, Nick (Nikolai Zhukov) Perumov was born November 21, 1963. An engineer-physicist graduated from the Department of Biophysics, physics and mechanics faculty of the Leningrad Polytechnic Institute. He then about ten years he was engaged in molecular immunology, he worked at the Leningrad research Institute of highly pure biopreparations.');
INSERT INTO `bookstore`.`authors` (`id`, `name`, `lastname`, `d_birth`, `biography`) VALUES (3, 'Sergey', 'Lukyanenko', '11-04-1968', 'Russian science fiction writer. Born in Kazakhstan, profession â€” psychiatrist. The first book came out at the turn of 80-90 years. Starting with things that felt imitation Krapivin (of ours) and Heinlein (from overseas), moved fast enough to be creative in their own original style.');

COMMIT;


-- -----------------------------------------------------
-- Data for table `bookstore`.`roles`
-- -----------------------------------------------------
START TRANSACTION;
USE `bookstore`;
INSERT INTO `bookstore`.`roles` (`id`, `title`) VALUES (1, 'administrator');
INSERT INTO `bookstore`.`roles` (`id`, `title`) VALUES (2, 'user');
INSERT INTO `bookstore`.`roles` (`id`, `title`) VALUES (3, 'guest');

COMMIT;


-- -----------------------------------------------------
-- Data for table `bookstore`.`users`
-- -----------------------------------------------------
START TRANSACTION;
USE `bookstore`;
INSERT INTO `bookstore`.`users` (`id`, `name`, `lastname`, `login`, `password`, `address`, `roles_id`) VALUES (1, 'Darth', 'Vader', 'admin', 'admin', 'Hrodno, Kosmonavtov-111', 1);
INSERT INTO `bookstore`.`users` (`id`, `name`, `lastname`, `login`, `password`, `address`, `roles_id`) VALUES (2, 'Luke', 'Skywalker', 'luke123', 'qwerty', 'Hrodno, Gagarina, 11-95', 2);

COMMIT;


-- -----------------------------------------------------
-- Data for table `bookstore`.`citys`
-- -----------------------------------------------------
START TRANSACTION;
USE `bookstore`;
INSERT INTO `bookstore`.`citys` (`id`, `name`) VALUES (1, 'Brest');
INSERT INTO `bookstore`.`citys` (`id`, `name`) VALUES (2, 'Gomel');
INSERT INTO `bookstore`.`citys` (`id`, `name`) VALUES (3, 'Grodno');
INSERT INTO `bookstore`.`citys` (`id`, `name`) VALUES (4, 'Mahilyow');
INSERT INTO `bookstore`.`citys` (`id`, `name`) VALUES (5, 'Minsk');
INSERT INTO `bookstore`.`citys` (`id`, `name`) VALUES (6, 'Vitebsk');

COMMIT;


-- -----------------------------------------------------
-- Data for table `bookstore`.`locations`
-- -----------------------------------------------------
START TRANSACTION;
USE `bookstore`;
INSERT INTO `bookstore`.`locations` (`id`, `title`, `citys_id`) VALUES (1, 'shop', 5);
INSERT INTO `bookstore`.`locations` (`id`, `title`, `citys_id`) VALUES (2, 'shop', 3);
INSERT INTO `bookstore`.`locations` (`id`, `title`, `citys_id`) VALUES (3, 'shop', 6);
INSERT INTO `bookstore`.`locations` (`id`, `title`, `citys_id`) VALUES (4, 'shop', 4);

COMMIT;


-- -----------------------------------------------------
-- Data for table `bookstore`.`diliverys`
-- -----------------------------------------------------
START TRANSACTION;
USE `bookstore`;
INSERT INTO `bookstore`.`diliverys` (`id`, `shipping_method`, `books_id`) VALUES (1, 'courier', 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `bookstore`.`orderings`
-- -----------------------------------------------------
START TRANSACTION;
USE `bookstore`;
INSERT INTO `bookstore`.`orderings` (`id`, `date`, `users_id`) VALUES (1, '12.08.2017', 2);

COMMIT;


-- -----------------------------------------------------
-- Data for table `bookstore`.`books_authors`
-- -----------------------------------------------------
START TRANSACTION;
USE `bookstore`;
INSERT INTO `bookstore`.`books_authors` (`id`, `authors_id`, `books_id`) VALUES (1, 1, 1);
INSERT INTO `bookstore`.`books_authors` (`id`, `authors_id`, `books_id`) VALUES (2, 2, 2);
INSERT INTO `bookstore`.`books_authors` (`id`, `authors_id`, `books_id`) VALUES (3, 3, 2);

COMMIT;


-- -----------------------------------------------------
-- Data for table `bookstore`.`books_locations`
-- -----------------------------------------------------
START TRANSACTION;
USE `bookstore`;
INSERT INTO `bookstore`.`books_locations` (`id`, `books_id`, `locations_id`, `count`) VALUES (1, 1, 1, 50);
INSERT INTO `bookstore`.`books_locations` (`id`, `books_id`, `locations_id`, `count`) VALUES (2, 1, 2, 20);
INSERT INTO `bookstore`.`books_locations` (`id`, `books_id`, `locations_id`, `count`) VALUES (3, 1, 3, 35);
INSERT INTO `bookstore`.`books_locations` (`id`, `books_id`, `locations_id`, `count`) VALUES (4, 2, 4, 40);

COMMIT;


-- -----------------------------------------------------
-- Data for table `bookstore`.`books_orderings`
-- -----------------------------------------------------
START TRANSACTION;
USE `bookstore`;
INSERT INTO `bookstore`.`books_orderings` (`id`, `orderings_id`, `books_id`) VALUES (1, 1, 1);

COMMIT;

